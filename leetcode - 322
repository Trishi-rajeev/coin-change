class Solution {
    public int coinChange(int[] coins, int amount) {
        int n = coins.length;
        int min = Integer.MAX_VALUE - 1;
        if(amount == 0) return 0;
        int[][] tab = new int[n + 1][amount + 1];
        for(int i = 0; i < n+1; ++i) {
            for(int j = 1; j < amount + 1; ++j) {
                if(i == 0) {
                    tab[i][j] = Integer.MAX_VALUE - 1;
                } else if(i == 1) {
                    if(j % coins[i-1] == 0) {
                        tab[i][j] = j / coins[i-1];
                    } else {
                        tab[i][j] = Integer.MAX_VALUE - 1;
                    }
                    if(j == amount) {
                        min = Math.min(min, tab[i][j]);
                    }
                } 
            }
        }
        for(int i = 2; i < n+1; ++i) {
            for(int j = 1; j < amount + 1; ++j) {
                if(coins[i-1] <= j) {
                    tab[i][j] = Math.min(1 + tab[i][j - coins[i-1]], tab[i-1][j]);
                } else {
                    tab[i][j] = tab[i-1][j];
                }
                if(j == amount) {
                    min = Math.min(min, tab[i][j]);
                }
            }
        }
        return min == Integer.MAX_VALUE - 1 ? -1 : min;
    }
}
